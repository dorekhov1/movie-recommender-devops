name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * 0'

env:
  DOCKER_REGISTRY: ghcr.io
  DOCKER_USERNAME: ${{ github.actor }}
  DOCKER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
  KUBERNETES_CLUSTER: your-cluster-name
  KUBERNETES_NAMESPACE: recommender

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
          pip install -r requirements.txt

      - name: Run Ruff
        run: |
          ruff check .
          ruff format --check .

      - name: Run tests
        run: |
          pytest tests/ 

  train-model:
    name: Train Model
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Train model
        run: python training/train.py

      - name: Upload model artifacts
        uses: actions/upload-artifact@v2
        with:
          name: model-artifacts
          path: |
            model/

  build:
    name: Build and Push Docker Images
    needs: [test, train-model]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Download model artifacts
        uses: actions/download-artifact@v2
        with:
          name: model-artifacts
          path: model/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Build and push proper solution
        uses: docker/build-push-action@v2
        with:
          context: ./proper-solution
          push: true
          tags: |
            ${{ env.DOCKER_REGISTRY }}/${{ github.repository }}/recommender-proper:latest
            ${{ env.DOCKER_REGISTRY }}/${{ github.repository }}/recommender-proper:${{ github.sha }}
          cache-from: type=registry,ref=${{ env.DOCKER_REGISTRY }}/${{ github.repository }}/recommender-proper:buildcache
          cache-to: type=registry,ref=${{ env.DOCKER_REGISTRY }}/${{ github.repository }}/recommender-proper:buildcache,mode=max

      - name: Build and push fallback solution
        uses: docker/build-push-action@v2
        with:
          context: ./fallback-solution
          push: true
          tags: |
            ${{ env.DOCKER_REGISTRY }}/${{ github.repository }}/recommender-fallback:latest
            ${{ env.DOCKER_REGISTRY }}/${{ github.repository }}/recommender-fallback:${{ github.sha }}
          cache-from: type=registry,ref=${{ env.DOCKER_REGISTRY }}/${{ github.repository }}/recommender-fallback:buildcache
          cache-to: type=registry,ref=${{ env.DOCKER_REGISTRY }}/${{ github.repository }}/recommender-fallback:buildcache,mode=max
